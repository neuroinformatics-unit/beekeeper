[project]
name = "beekeeper"
authors = [
  { name = "Sofia MiÃ±ano", email = "s.minano@ucl.ac.uk" },
  { name = "Nikoloz Sirmpilatze", email = "niko.sirbiladze@gmail.com" },
  { name = "Sam Cunliffe", email = "s.cunliffe@ucl.ac.uk" },
  { name = "Adam Tyson", email = "code@adamltyson.com" },
]
description = "Managing video metadata for animal behaviour experiments"
readme = "README.md"
requires-python = ">=3.9.0"
dynamic = ["version"]

license = { text = "BSD-3-Clause" }

dependencies = [
  "numpy",
  "pandas",
  "dash",
  "dash-bootstrap-components",
  "PyYAML",
  "openpyxl",
]

classifiers = [
  "Development Status :: 2 - Pre-Alpha",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Operating System :: OS Independent",
  "License :: OSI Approved :: BSD License",
]

[project.urls]
"Homepage" = "https://github.com/sfmig/beekeeper"
"Bug tracker" = "https://github.com/sfmig/beekeeper/issues"
# "Documentation" = "https://sfmig.github.io/beekeeper"
"Source code" = "https://github.com/sfmig/beekeeper"
# "User support" = "https://github.com/sfmig/beekeeper/issues"

[project.scripts]
start-beekeeper = "beekeeper.app:startbeekeeper"

[project.optional-dependencies]
dev = [
  "pytest",
  "pytest-cov",
  "coverage",
  "dash[testing]",
  "tox",
  "black",
  "ruff",
  "mypy",
  "pre-commit",
  "setuptools-scm",
  "types-PyYAML",
  "pandas-stubs",
  "types-Pillow",
]  # TODO update with latest cookiecutter


[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
include = ["beekeeper*"]
exclude = ["tests*", "docs*"]

[tool.pytest.ini_options]
addopts = "--cov=beekeeper"

[tool.black]
target-version = ['py39', 'py310']
skip-string-normalization = false
exclude = '''
(
  /(
      \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | examples
  )/
)
'''

[tool.ruff]
line-length = 79
exclude = ["__init__.py", "build", ".eggs"]
fix = true

[tool.ruff.lint]
# See https://docs.astral.sh/ruff/rules/
ignore = [
  "D203", # one blank line before class
  "D213", # multi-line-summary second line
]
select = [
  "E",      # pycodestyle errors
  "F",      # Pyflakes
  "UP",     # pyupgrade
  "I",      # isort
  "B",      # flake8 bugbear
  "SIM",    # flake8 simplify
  "C90",    # McCabe complexity
  "D",      # pydocstyle
  "NPY201", # checks for syntax that was deprecated in numpy2.0
]
per-file-ignores = { "tests/*" = [
  "D100", # missing docstring in public module
  "D205", # missing blank line between summary and description
  "D103", # missing docstring in public function
], "examples/*" = [
  "B018", # Found useless expression
  "D103", # Missing docstring in public function
  "D400", # first line should end with a period.
  "D415", # first line should end with a period, question mark...
  "D205", # missing blank line between summary and description
] }

[tool.ruff.format]
docstring-code-format = true # Also format code in docstrings

[tool.setuptools_scm]

[tool.check-manifest]
ignore = [
  "*.yaml",
  "tox.ini",
  "tests/*",
  "tests/test_unit/*",
  "tests/test_integration/*",
  "docs/",
  "docs/source/",
]

[[tool.mypy.overrides]]
module = [
  "dash.*",
  "dash_bootstrap_components.*",
  "matplotlib.*",
  "plotly.*",
  "cv2.*",
  "shapely.*",
]
ignore_missing_imports = true
